<!-- views/library.ejs -->
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>My Library - BookReader</title>
  <link rel="stylesheet" href="/css/style.css">
</head>
<body>
  <header>
    <div class="container">
      <h1><a href="/">BookReader</a></h1>
      <nav>
        <a href="/library" class="active">My Library</a>
        <a href="/upload">Upload Book</a>
        <a href="/logout">Logout</a>
      </nav>
    </div>
  </header>
  
  <main class="container">
    <h2>My Library</h2>
    
    <div class="book-grid">
      <% if (books.length === 0) { %>
        <div class="empty-state">
          <p>Your library is empty. <a href="/upload">Upload your first book</a> to get started.</p>
        </div>
      <% } else { %>
        <% books.forEach(book => { %>
          <div class="book-card" data-id="<%= book._id %>">
            <div class="book-cover">
              <div class="book-icon">ðŸ“š</div>
            </div>
            <div class="book-info">
              <h3><%= book.title %></h3>
              <p class="author">by <%= book.author %></p>
              <p class="upload-date">Uploaded: <%= new Date(book.uploadDate).toLocaleDateString() %></p>
              <div class="book-actions">
                <a href="/read/<%= book._id %>" class="btn btn-primary">Read</a>
                <button class="btn btn-danger delete-book">Delete</button>
              </div>
            </div>
          </div>
        <% }) %>
      <% } %>
    </div>
  </main>
  
  <footer>
    <div class="container">
      <p>&copy; 2025 BookReader. All rights reserved.</p>
    </div>
  </footer>
  
  <script>
    document.addEventListener('DOMContentLoaded', () => {
      const deleteButtons = document.querySelectorAll('.delete-book');
      
      deleteButtons.forEach(button => {
        button.addEventListener('click', async (e) => {
          const bookCard = e.target.closest('.book-card');
          const bookId = bookCard.dataset.id;
          
          if (confirm('Are you sure you want to delete this book? This action cannot be undone.')) {
            try {
              const response = await fetch(`/book/${bookId}`, {
                method: 'DELETE'
              });
              
              const data = await response.json();
              
              if (data.success) {
                bookCard.remove();
                
                // If all books are removed, show empty state
                if (document.querySelectorAll('.book-card').length === 0) {
                  const bookGrid = document.querySelector('.book-grid');
                  bookGrid.innerHTML = `
                    <div class="empty-state">
                      <p>Your library is empty. <a href="/upload">Upload your first book</a> to get started.</p>
                    </div>
                  `;
                }
              } else {
                alert('Failed to delete book');
              }
            } catch (err) {
              console.error('Error:', err);
              alert('An error occurred');
            }
          }
        });
      });
    });
  </script>
</body>
</html>